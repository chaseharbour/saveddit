{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chase/Documents/dev/scheddit/client/src/Components/Dashbaord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n  _s();\n\n  const [userSubreddits, setUserSubreddits] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8081/dashboard\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(response => {\n      console.log(response);\n      if (response.status === 200) return response.json();\n      throw new Error(\"Failed to retrieve subreddits\");\n    }).then(responseJson => {\n      console.log(responseJson);\n      setUserSubreddits(responseJson);\n      console.log(userSubreddits);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), userSubreddits ? userSubreddits.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: i.imgMed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, i.postFullname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No subreddits found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this), userSubreddits ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"VeRoDHQ+5TUD8LVIbGBP0cmovuE=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/chase/Documents/dev/scheddit/client/src/Components/Dashbaord.js"],"names":["React","useState","useEffect","Dashboard","userSubreddits","setUserSubreddits","fetch","method","credentials","headers","Accept","then","response","console","log","status","json","Error","responseJson","catch","error","map","i","imgMed","postFullname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZI,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,WAAW,EAAE,SAFwB;AAGrCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,4CAAoC;AAH/B;AAH4B,KAApC,CAAL,CASCC,IATD,CASMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B,OAAOH,QAAQ,CAACI,IAAT,EAAP;AAC7B,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH,KAbD,EAcCN,IAdD,CAcMO,YAAY,IAAI;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACAb,MAAAA,iBAAiB,CAACa,YAAD,CAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ;AACH,KAlBD,EAmBCe,KAnBD,CAmBOC,KAAK,IAAI;AACZP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACH,KArBD;AAsBH,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKhB,cAAc,GAAIA,cAAc,CAACiB,GAAf,CAAmBC,CAAC,IAAI;AACvC,0BACI;AAAA,+BACI;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEA,CAAC,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASD,CAAC,CAACE,YAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARkB,CAAJ,gBAQV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVT,EAWKpB,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgC,IAXnD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7CD;;GAAMD,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n\n    const [userSubreddits, setUserSubreddits] = useState([]);\n\n    useEffect(() => {\n         \n        fetch(\"http://localhost:8081/dashboard\", {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Credentials\": true\n            }\n        })\n        .then(response => {\n            console.log(response);\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to retrieve subreddits\");\n        })\n        .then(responseJson => {\n            console.log(responseJson);\n            setUserSubreddits(responseJson);\n            console.log(userSubreddits);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n    }, [])\n\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            {userSubreddits ?  userSubreddits.map(i => {\n                return (\n                    <ul>\n                        <li key={i.postFullname}>\n                            <img src={i.imgMed}></img>\n                        </li>\n                    </ul>\n                )\n            }) : <p>No subreddits found.</p>}\n            {userSubreddits ? <button>Load More</button> : null}\n        </div>\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}