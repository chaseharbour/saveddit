{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chase/Documents/dev/scheddit/client/src/Components/Dashbaord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navigation from './Navigation';\n\nconst Dashboard = () => {\n  _s();\n\n  const [userSavedPosts, setUSerSavedPosts] = useState([]);\n  const [authenticated, setAuthenticated] = useState(false);\n  const [nextPageQuery, setNextPageQuery] = useState(null);\n\n  const getSavedQuery = postId => {\n    fetch(`http://localhost:8081/dashboard/${postId}`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(response => {\n      console.log(response);\n      if (response.status === 200) return response.json();\n      throw new Error(\"Failed to retrieve subreddits\");\n    }).then(responseJson => {\n      setUSerSavedPosts(responseJson);\n      setAuthenticated(true);\n      setNextPageQuery(userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname);\n    }).catch(error => {\n      setAuthenticated(false);\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    getSavedQuery(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      authenticated: authenticated,\n      setAuthenticated: setAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), userSavedPosts ? userSavedPosts.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: i.imgMed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, i.postFullname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No subreddits found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this), userSavedPosts ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"9+u3gMtFlVfo0Z/iRTyURWXq9uI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/chase/Documents/dev/scheddit/client/src/Components/Dashbaord.js"],"names":["React","useState","useEffect","Navigation","Dashboard","userSavedPosts","setUSerSavedPosts","authenticated","setAuthenticated","nextPageQuery","setNextPageQuery","getSavedQuery","postId","fetch","method","credentials","headers","Accept","then","response","console","log","status","json","Error","responseJson","slice","length","postFullname","catch","error","map","i","imgMed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMU,aAAa,GAAIC,MAAD,IAAY;AAC9BC,IAAAA,KAAK,CAAE,mCAAkCD,MAAO,EAA3C,EAA8C;AAC/CE,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,WAAW,EAAE,SAFkC;AAG/CC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,4CAAoC;AAH/B;AAHsC,KAA9C,CAAL,CASCC,IATD,CASMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B,OAAOH,QAAQ,CAACI,IAAT,EAAP;AAC7B,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH,KAbD,EAcCN,IAdD,CAcMO,YAAY,IAAI;AAClBnB,MAAAA,iBAAiB,CAACmB,YAAD,CAAjB;AACAjB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,gBAAgB,CAACL,cAAc,CAACqB,KAAf,CAAqBrB,cAAc,CAACsB,MAAf,GAAwB,CAA7C,EAAgD,CAAhD,EAAmDC,YAApD,CAAhB;AACH,KAlBD,EAmBCC,KAnBD,CAmBOC,KAAK,IAAI;AACZtB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAY,MAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AACH,KAtBD;AAuBH,GAxBD;;AA0BA5B,EAAAA,SAAS,CAAC,MAAM;AACXS,IAAAA,aAAa,CAAC,CAAD,CAAb;AACJ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BAEI,QAAC,UAAD;AACI,MAAA,aAAa,EAAEJ,aADnB;AAEI,MAAA,gBAAgB,EAAEC;AAFtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKH,cAAc,GAAIA,cAAc,CAAC0B,GAAf,CAAmBC,CAAC,IAAI;AACvC,0BACI;AAAA,+BACI;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEA,CAAC,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASD,CAAC,CAACJ,YAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARkB,CAAJ,gBAQV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfT,EAgBKvB,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgC,IAhBnD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAxDD;;GAAMD,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navigation from './Navigation';\n\nconst Dashboard = () => {\n\n    const [userSavedPosts, setUSerSavedPosts] = useState([]);\n    const [authenticated, setAuthenticated] = useState(false);\n    const [nextPageQuery, setNextPageQuery] = useState(null);\n\n    const getSavedQuery = (postId) => {\n        fetch(`http://localhost:8081/dashboard/${postId}`, {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Credentials\": true\n            }\n        })\n        .then(response => {\n            console.log(response);\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to retrieve subreddits\");\n        })\n        .then(responseJson => {\n            setUSerSavedPosts(responseJson);\n            setAuthenticated(true);\n            setNextPageQuery(userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname)\n        })\n        .catch(error => {\n            setAuthenticated(false);\n            console.error(error);\n        })\n    }\n\n    useEffect(() => {\n         getSavedQuery(1);\n    }, [])\n\n    return (\n        <div>\n            {/*Bad practice, need to create context for auth*/}\n            <Navigation \n                authenticated={authenticated}\n                setAuthenticated={setAuthenticated}\n            />\n            <h1>Dashboard</h1>\n            {userSavedPosts ?  userSavedPosts.map(i => {\n                return (\n                    <ul>\n                        <li key={i.postFullname}>\n                            <img src={i.imgMed}></img>\n                        </li>\n                    </ul>\n                )\n            }) : <p>No subreddits found.</p>}\n            {userSavedPosts ? <button>Load More</button> : null}\n        </div>\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}