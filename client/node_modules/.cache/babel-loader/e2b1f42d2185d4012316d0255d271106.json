{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Welcome from './Welcome';\nimport Dashboard from './Dashbaord';\nimport ProtectedRoute from './ProtectedRoute';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from './Navigation';\n\nconst AppRouter = () => {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const getAuthState = async () => {\n    try {\n      const response = await axios.get('http://localhost:8081/auth/login/success');\n      setAuthenticated(true);\n      setUser(response.user);\n    } catch (error) {\n      console.log(error);\n      setAuthenticated(false);\n      setUser(null);\n      throw new Error('User not authenticated.');\n    }\n  };\n\n  useEffect(() => {\n    getAuthState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      user: user,\n      authenticated: authenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Welcome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        component: Dashboard,\n        authenticated: authenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"OvbWU8yws+14O6HjuCu45nKCA2E=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js"],"names":["React","Welcome","Dashboard","ProtectedRoute","BrowserRouter","Router","Route","Switch","Navigation","AppRouter","authenticated","setAuthenticated","useState","user","setUser","getAuthState","response","axios","get","error","console","log","Error","useEffect"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAsD,kBAAtD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMG,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,0CAAV,CAAvB;AAEAP,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAG,MAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACH,KALD,CAKE,OAAOM,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAG,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAM,IAAIQ,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ,GAZD;;AAcAC,EAAAA,SAAS,CAAC,MAAM;AACZR,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,IAAlB;AAAwB,MAAA,aAAa,EAAEH;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAET;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,GAA3B;AAA+B,QAAA,SAAS,EAAEC,SAA1C;AAAqD,QAAA,aAAa,EAAEQ;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA/BD;;GAAMD,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport Welcome from './Welcome';\nimport Dashboard from './Dashbaord';\nimport ProtectedRoute from './ProtectedRoute';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Navigation from './Navigation';\n\nconst AppRouter = () => {\n    const [authenticated, setAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n\n    const getAuthState = async () => {\n        try {\n            const response = await axios.get('http://localhost:8081/auth/login/success')\n\n            setAuthenticated(true);\n            setUser(response.user);\n        } catch (error) {\n            console.log(error);\n            setAuthenticated(false);\n            setUser(null);\n            throw new Error('User not authenticated.');\n        }\n    }\n\n    useEffect(() => {\n        getAuthState();\n    }, []);\n\n    return (\n        <Router>\n            <Navigation user={user} authenticated={authenticated}/>\n            <Switch>\n                <Route exact path=\"/login\" component={Welcome} />\n                <ProtectedRoute exact path=\"/\" component={Dashboard} authenticated={authenticated}/>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n"]},"metadata":{},"sourceType":"module"}