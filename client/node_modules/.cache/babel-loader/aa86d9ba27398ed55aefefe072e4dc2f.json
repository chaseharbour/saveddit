{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chase/Documents/dev/scheddit/client/src/Components/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport axios from 'axios';\n\nconst ProtectedRoute = ({\n  component\n}) => {\n  _s();\n\n  const Component = component;\n  const [authenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const getAuthState = async () => {\n    try {\n      const response = await axios.get('http://localhost:8081/auth/login/success');\n      setAuthenticated(true);\n      setUser(response.user);\n    } catch (error) {\n      console.log(error);\n      setAuthenticated(false);\n      setUser(null);\n      throw new Error('User not authenticated.');\n    }\n  };\n\n  useEffect(() => {\n    getAuthState();\n  }, []);\n  return authenticated ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/login'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"OvbWU8yws+14O6HjuCu45nKCA2E=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/chase/Documents/dev/scheddit/client/src/Components/ProtectedRoute.js"],"names":["React","useEffect","useState","createContext","Redirect","Navigation","axios","ProtectedRoute","component","Component","authenticated","setAuthenticated","user","setUser","getAuthState","response","get","error","console","log","Error","pathname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACtC,QAAMC,SAAS,GAAGD,SAAlB;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMY,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,0CAAV,CAAvB;AAEAL,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACH,KALD,CAKE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAM,IAAIO,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ,GAZD;;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOJ,aAAa,gBAChB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADgB,gBAGhB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEW,MAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,UAHJ;AAKH,CA5BD;;GAAMd,c;;KAAAA,c;AA8BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, createContext } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport axios from 'axios';\n\nconst ProtectedRoute = ({ component }) => {\n    const Component = component;\n    const [authenticated, setAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n\n    const getAuthState = async () => {\n        try {\n            const response = await axios.get('http://localhost:8081/auth/login/success')\n\n            setAuthenticated(true);\n            setUser(response.user);\n        } catch (error) {\n            console.log(error);\n            setAuthenticated(false);\n            setUser(null);\n            throw new Error('User not authenticated.');\n        }\n    }\n\n    useEffect(() => {\n        getAuthState();\n    }, []);\n\n    return authenticated ? (    \n        <Component />\n    ) : (\n        <Redirect to={{ pathname: '/login'}} />\n    );\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}