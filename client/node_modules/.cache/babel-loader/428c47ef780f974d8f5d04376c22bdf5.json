{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chase/Documents/dev/scheddit/client/src/Components/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Welcome from './Welcome';\nimport axios from 'axios';\n\nconst ProtectedRoute = ({\n  component\n}) => {\n  _s();\n\n  const Component = component;\n  const [authenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const getAuthState = async () => {\n    try {\n      const response = await axios.get('http://localhost:8081/auth/login/success');\n      setAuthenticated(true);\n      setUser(response.user);\n    } catch (error) {\n      console.log(error);\n      setAuthenticated(false);\n      setUser(null);\n      throw new Error('User not authenticated.');\n    }\n  };\n\n  useEffect(() => {\n    getAuthState();\n  }, []);\n  return authenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      authenticated: authenticated,\n      setAuthenticated: setAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      authenticated: authenticated,\n      setAuthenticated: setAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProtectedRoute, \"OvbWU8yws+14O6HjuCu45nKCA2E=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/chase/Documents/dev/scheddit/client/src/Components/ProtectedRoute.js"],"names":["React","useEffect","useState","Redirect","Navigation","Welcome","axios","ProtectedRoute","component","Component","authenticated","setAuthenticated","user","setUser","getAuthState","response","get","error","console","log","Error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACtC,QAAMC,SAAS,GAAGD,SAAlB;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMY,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,0CAAV,CAAvB;AAEAL,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACH,KALD,CAKE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAM,IAAIO,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ,GAZD;;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOJ,aAAa,gBAChB;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,aAAa,EAAEA,aADnB;AAEI,MAAA,gBAAgB,EAAEC;AAFtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADgB,gBAShB;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,aAAa,EAAED,aADnB;AAEI,MAAA,gBAAgB,EAAEC;AAFtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBATJ;AAiBH,CAxCD;;GAAMJ,c;;KAAAA,c;AA0CN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Welcome from './Welcome';\nimport axios from 'axios';\n\nconst ProtectedRoute = ({ component }) => {\n    const Component = component;\n    const [authenticated, setAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n\n    const getAuthState = async () => {\n        try {\n            const response = await axios.get('http://localhost:8081/auth/login/success')\n\n            setAuthenticated(true);\n            setUser(response.user);\n        } catch (error) {\n            console.log(error);\n            setAuthenticated(false);\n            setUser(null);\n            throw new Error('User not authenticated.');\n        }\n    }\n\n    useEffect(() => {\n        getAuthState();\n    }, []);\n\n    return authenticated ? (\n        <>\n            <Navigation \n                authenticated={authenticated}\n                setAuthenticated={setAuthenticated}\n            />\n            <Component />\n        </>\n    ) : (\n        <>\n            <Navigation \n                authenticated={authenticated}\n                setAuthenticated={setAuthenticated}\n            />\n            <Welcome />\n        </>\n    )\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}