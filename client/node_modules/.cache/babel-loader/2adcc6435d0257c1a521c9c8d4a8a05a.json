{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Welcome from './Welcome';\nimport Dashboard from './Dashbaord';\nimport ProtectedRoute from './ProtectedRoute';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from 'axios';\nimport Navigation from './Navigation';\n\nconst AppRouter = () => {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); // const getAuthState = async () => {\n  //     try {\n  //         const response = await axios.get('http://localhost:8081/auth/login/success')\n  //         console.log(response);\n  //         setAuthenticated(true);\n  //         setUser(response.user);\n  //         return response;\n  //     } catch (error) {\n  //         console.log(error);\n  //         setAuthenticated(false);\n  //         setUser(null);\n  //         throw new Error('User not authenticated.');\n  //     }\n  // }\n\n  useEffect(() => {\n    fetch(\"http://localhost:8081/auth/login/success\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(response => {\n      if (response.status === 200) return response.json();\n      throw new Error(\"Failed to authenticate user\");\n    }).then(responseJson => {\n      setAuthenticated(true);\n      setUser(responseJson.user);\n    }).catch(error => {\n      setAuthenticated(false);\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      authenticated: authenticated,\n      setAuthenticated: setAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Welcome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        component: Dashboard,\n        authenticated: authenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"OvbWU8yws+14O6HjuCu45nKCA2E=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js"],"names":["React","useState","useEffect","Welcome","Dashboard","ProtectedRoute","BrowserRouter","Router","Route","Switch","axios","Navigation","AppRouter","authenticated","setAuthenticated","user","setUser","fetch","method","credentials","headers","Accept","then","response","status","json","Error","responseJson","catch","error","console"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAsD,kBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC,CAFoB,CAIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC7CC,MAAAA,MAAM,EAAE,KADqC;AAE7CC,MAAAA,WAAW,EAAE,SAFgC;AAG7CC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,4CAAoC;AAH/B;AAHoC,KAA7C,CAAL,CAQIC,IARJ,CAQSC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOD,QAAQ,CAACE,IAAT,EAAP;AAC7B,YAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACH,KAXF,EAYEJ,IAZF,CAYOK,YAAY,IAAI;AAClBb,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,OAAO,CAACW,YAAY,CAACZ,IAAd,CAAP;AACH,KAfF,EAgBEa,KAhBF,CAgBQC,KAAK,IAAI;AACZf,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAgB,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAnBF;AAoBH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEhB,aAA3B;AAA0C,MAAA,gBAAgB,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEX;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,GAA3B;AAA+B,QAAA,SAAS,EAAEC,SAA1C;AAAqD,QAAA,aAAa,EAAES;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAnDD;;GAAMD,S;;KAAAA,S;AAqDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Welcome from './Welcome';\nimport Dashboard from './Dashbaord';\nimport ProtectedRoute from './ProtectedRoute';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport axios from 'axios';\nimport Navigation from './Navigation';\n\nconst AppRouter = () => {\n    const [authenticated, setAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n\n    // const getAuthState = async () => {\n    //     try {\n    //         const response = await axios.get('http://localhost:8081/auth/login/success')\n    //         console.log(response);\n    //         setAuthenticated(true);\n    //         setUser(response.user);\n    //         return response;\n    //     } catch (error) {\n    //         console.log(error);\n    //         setAuthenticated(false);\n    //         setUser(null);\n    //         throw new Error('User not authenticated.');\n    //     }\n    // }\n\n    useEffect(() => {\n        fetch(\"http://localhost:8081/auth/login/success\", {\n             method: \"GET\",\n             credentials: \"include\",\n             headers: {\n                 Accept: \"application/json\",\n                 \"Content-type\": \"application/json\",\n                 \"Access-Control-Allow-Credentials\": true\n             }\n         }).then(response => {\n             if (response.status === 200) return response.json();\n             throw new Error(\"Failed to authenticate user\");\n         })\n         .then(responseJson => {\n             setAuthenticated(true);\n             setUser(responseJson.user);\n         })\n         .catch(error => {\n             setAuthenticated(false);\n             console.error(error);\n         })\n    }, []);\n\n    return (\n        <Router>\n            <Navigation authenticated={authenticated} setAuthenticated={setAuthenticated}/>\n            <Switch>\n                <Route exact path=\"/login\" component={Welcome} />\n                <ProtectedRoute exact path=\"/\" component={Dashboard} authenticated={authenticated}/>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n"]},"metadata":{},"sourceType":"module"}