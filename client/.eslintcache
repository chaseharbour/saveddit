[{"/home/chase/Documents/dev/scheddit/client/src/index.js":"1","/home/chase/Documents/dev/scheddit/client/src/App.js":"2","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js":"3","/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js":"4","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js":"5","/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js":"6","/home/chase/Documents/dev/scheddit/client/src/Components/Home.js":"7","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js":"8","/home/chase/Documents/dev/scheddit/client/src/Components/Login.js":"9","/home/chase/Documents/dev/scheddit/client/src/Components/Modal.js":"10","/home/chase/Documents/dev/scheddit/client/src/Components/Loading.js":"11"},{"size":525,"mtime":1615935991502,"results":"12","hashOfConfig":"13"},{"size":419,"mtime":1615935991470,"results":"14","hashOfConfig":"13"},{"size":698,"mtime":1615935991470,"results":"15","hashOfConfig":"13"},{"size":1132,"mtime":1615935991470,"results":"16","hashOfConfig":"13"},{"size":640,"mtime":1615935991470,"results":"17","hashOfConfig":"13"},{"size":737,"mtime":1615935991470,"results":"18","hashOfConfig":"13"},{"size":1375,"mtime":1615935991470,"results":"19","hashOfConfig":"13"},{"size":3336,"mtime":1615935991470,"results":"20","hashOfConfig":"13"},{"size":476,"mtime":1615935991470,"results":"21","hashOfConfig":"13"},{"size":596,"mtime":1615935991470,"results":"22","hashOfConfig":"13"},{"size":337,"mtime":1615935991470,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4i1dfj",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/chase/Documents/dev/scheddit/client/src/index.js",[],"/home/chase/Documents/dev/scheddit/client/src/App.js",["52","53"],"import React, { useState, useEffect } from 'react';\nimport Home from './Components/Home';\nimport Navigation from './Components/Navigation';\n\n\nfunction App() {\n    // const [authenticated, setAuthenticated] = useState(false);\n    // const [user, setUser] = useState(null);\n\n    \n\n    return (\n        <React.Fragment>\n            <Navigation />\n            <Home />\n        </React.Fragment>\n    )\n}\n\nexport default App;",["54","55"],"/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js",["56"],"import React, { useState, useContext } from 'react'\nimport { AuthContext } from '../Contexts/AuthContext';\n\nconst Navigation = () => {\n\n    const { isAuth, setAuthData, setLoadingState } = useContext(AuthContext);\n\n    const handleLogoutClick = () => {\n        window.open(\"http://localhost:8081/auth/logout\", \"_self\")\n        setAuthData(false);\n    }\n\n    const handleLoginClick = () => {\n        window.open(\"http://localhost:8081/auth/reddit\", \"_self\")\n        setLoadingState(true);\n    }\n    \n    return (\n        <nav className=\"navbar\">\n            <ul className=\"navbar-list\">\n                {/* <li className=\"home nav-btn navbar-list_item\">\n                    <Link to=\"/\">Home</Link>\n                </li> */}\n                {isAuth ? (\n                    <>\n                        <li className=\"high-contrast-btn navbar-list_item\" onClick={handleLogoutClick}>Logout</li>\n                    </>\n                ) : (\n                    <li className=\"high-contrast-btn navbar-list_item\" onClick={handleLoginClick}>Login</li>\n                )}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation\n","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js",[],"/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Home.js",["57","58"],"import React, { useEffect, useContext } from 'react'\nimport { AuthContext } from '../Contexts/AuthContext';\nimport Dashboard from './Dashboard';\nimport Welcome from './Welcome'\n\n\nconst Home = (props) => {\n    const { isAuth, userName, setAuthData, setLoadingState, setUserData } = useContext(AuthContext);\n\n    useEffect(() => {\n        fetch(\"http://localhost:8081/auth/login/success\", {\n             method: \"GET\",\n             credentials: \"include\",\n             headers: {\n                 Accept: \"application/json\",\n                 \"Content-type\": \"application/json\",\n                 \"Access-Control-Allow-Credentials\": true\n             }\n         }).then(response => {\n            setLoadingState(true);\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to authenticate user\");\n         })\n         .then(responseJson => {\n            setAuthData(true);\n            setLoadingState(false);\n            setUserData(responseJson.user);\n         })\n         .catch(error => {\n            setAuthData(false);\n            setUserData(null);\n            setLoadingState(true);\n            console.error(error);\n         })\n    }, []);\n    \n    return (\n        <>\n           {isAuth ? (\n            <>\n                <Dashboard />\n            </>\n           ) : (<Welcome />)}\n        </>\n    )\n}\n\nexport default Home\n","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js",["59","60","61"],"import React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../Contexts/AuthContext';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nconst Dashboard = () => {\n    const [userSelectedImg, setUserSelectedImg] = useState(null);\n    const [modalActive, setModalActive] = useState(false);\n    const [userSavedPosts, setUSerSavedPosts] = useState([]);\n    const [nextPageQuery, setNextPageQuery] = useState(1);\n    const [dataLoading, setDataLoading] = useState(false);\n    const [isLastPage, setIsLastPage] = useState(false);\n\n    const { userName } = useContext(AuthContext);\n\n    const imgClickEvent = (e) => {\n        const clickedImgObj = userSavedPosts.find(el => el.title === e.target.alt);\n        const clickedImgFullSizeSrc = clickedImgObj.imgFull;\n        const clickedImgAlt = clickedImgObj.title;\n\n        setUserSelectedImg({src: clickedImgFullSizeSrc, alt: clickedImgAlt});\n        setModalActive(true);\n    }\n\n    const getSavedQuery = () => {\n        setDataLoading(true);\n        fetch(`http://localhost:8081/dashboard/${nextPageQuery}`, {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Credentials\": true\n            }\n        })\n        .then(response => {\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to retrieve subreddits\");\n        })\n        .then(responseJson => {\n            //Subsequent queries are sent with a unique post identifier. Complimentary back-end logic can be found at ../../../server/routes/dashboard_routes.js line 55.\n            if (nextPageQuery !== 1) {\n                setUSerSavedPosts(prevItems => [...prevItems, ...responseJson]);\n            } else {\n                setUSerSavedPosts(responseJson);\n            }\n            setDataLoading(false);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n    }\n\n    useEffect(() => {\n         getSavedQuery();\n    }, []);\n\n    useEffect(() => {\n        if (userSavedPosts.length > 1) {\n            setNextPageQuery(userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname)        \n        }      \n    }, [userSavedPosts]);\n\n    return (\n        <main className=\"dashboard-container\">\n            <aside className='dashboard-header'>\n                <h2 className='dashboard-header_text'>Showing saved content for u/{userName}</h2>\n            </aside>\n            \n            <section className=\"image-container\">\n                {userSavedPosts ?  userSavedPosts.map(i => {\n                    return (\n                        <img className=\"image-container_item img-med\" onClick={imgClickEvent} key={i.postFullname} src={i.imgMed} alt={i.title}></img>  \n                        )\n                    }) : <p>No saved images found.</p>}\n                \n            </section>\n            {userSavedPosts && !dataLoading ? <button className=\"btn\" onClick={getSavedQuery}><p>Load More</p></button> : <Loading />}\n            {userSelectedImg && modalActive ? <Modal currImageSrc={userSelectedImg.src} currImageAlt={userSelectedImg.alt} setModalActive={setModalActive}/> : null}\n        </main>\n    )\n}\n\nexport default Dashboard;","/home/chase/Documents/dev/scheddit/client/src/Components/Login.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Modal.js",["62"],"import React, { useState } from 'react'\nimport {ReactComponent as Close} from '../icons/close.svg';\n\nconst Modal = (props) => {\n    const { currImageSrc, currImageAlt, setModalActive } = props;\n\n    const deactivateModal = () => {\n        setModalActive(false);\n    }\n    return (\n        <div className=\"modal-background\">\n            <div className=\"image-modal\">\n                <img src={currImageSrc} alt={currImageAlt} />\n            </div>\n            <button className=\"image-modal_close exit-btn\" onClick={deactivateModal}><Close /></button>\n        </div>\n    )\n}\n\nexport default Modal\n","/home/chase/Documents/dev/scheddit/client/src/Components/Loading.js",[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"72","line":8,"column":21,"nodeType":"65","messageId":"66","endLine":8,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":35,"column":8,"nodeType":"75","endLine":35,"endColumn":10,"suggestions":"76"},{"ruleId":"63","severity":1,"message":"77","line":12,"column":12,"nodeType":"65","messageId":"66","endLine":12,"endColumn":22},{"ruleId":"63","severity":1,"message":"78","line":12,"column":24,"nodeType":"65","messageId":"66","endLine":12,"endColumn":37},{"ruleId":"73","severity":1,"message":"79","line":56,"column":8,"nodeType":"75","endLine":56,"endColumn":10,"suggestions":"80"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'userName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAuthData', 'setLoadingState', and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["83"],"'isLastPage' is assigned a value but never used.","'setIsLastPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSavedQuery'. Either include it or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [setAuthData, setLoadingState, setUserData]",{"range":"89","text":"90"},"Update the dependencies array to be: [getSavedQuery]",{"range":"91","text":"92"},[1186,1188],"[setAuthData, setLoadingState, setUserData]",[2116,2118],"[getSavedQuery]"]