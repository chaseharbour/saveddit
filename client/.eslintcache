[{"/home/chase/Documents/dev/scheddit/client/src/index.js":"1","/home/chase/Documents/dev/scheddit/client/src/App.js":"2","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js":"3","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js":"4","/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js":"5","/home/chase/Documents/dev/scheddit/client/src/Components/ProtectedRoute.js":"6","/home/chase/Documents/dev/scheddit/client/src/Components/Login.js":"7","/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js":"8","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js":"9"},{"size":502,"mtime":1614986872066,"results":"10","hashOfConfig":"11"},{"size":324,"mtime":1615240782524,"results":"12","hashOfConfig":"11"},{"size":1415,"mtime":1615237296969,"results":"13","hashOfConfig":"11"},{"size":701,"mtime":1615237293625,"results":"14","hashOfConfig":"11"},{"size":1166,"mtime":1615244551727,"results":"15","hashOfConfig":"11"},{"size":689,"mtime":1614991721538,"results":"16","hashOfConfig":"11"},{"size":386,"mtime":1614899888467,"results":"17","hashOfConfig":"11"},{"size":737,"mtime":1614990899538,"results":"18","hashOfConfig":"11"},{"size":2254,"mtime":1615237239709,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4i1dfj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/home/chase/Documents/dev/scheddit/client/src/index.js",[],["43","44"],"/home/chase/Documents/dev/scheddit/client/src/App.js",["45","46"],"import React, { useState, useEffect } from 'react';\nimport AppRouter from './Components/AppRouter';\nimport './main.scss';\n\n\nfunction App() {\n    // const [authenticated, setAuthenticated] = useState(false);\n    // const [user, setUser] = useState(null);\n\n    \n\n    return (\n        <AppRouter />\n    )\n}\n\nexport default App;","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js",["47"],"import React, { useEffect, useContext } from 'react'\nimport { AuthContext } from '../Contexts/AuthContext';\nimport Dashboard from './Dashboard';\n\n\nconst Welcome = (props) => {\n    const { isAuth, userName, setAuthData, setLoadingState, setUserData } = useContext(AuthContext);\n\n    useEffect(() => {\n        fetch(\"http://localhost:8081/auth/login/success\", {\n             method: \"GET\",\n             credentials: \"include\",\n             headers: {\n                 Accept: \"application/json\",\n                 \"Content-type\": \"application/json\",\n                 \"Access-Control-Allow-Credentials\": true\n             }\n         }).then(response => {\n            setLoadingState(true);\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to authenticate user\");\n         })\n         .then(responseJson => {\n            setAuthData(true);\n            setLoadingState(false);\n            setUserData(responseJson.user);\n         })\n         .catch(error => {\n            setAuthData(false);\n            setUserData(null);\n            setLoadingState(true);\n            console.error(error);\n         })\n    }, []);\n    \n    return (\n        <>\n           {isAuth ? (\n            <>\n                <h1>Welcome, {userName}</h1>\n                <Dashboard />\n            </>\n           ) : (<h1>Welcome, please log in.</h1>)}\n        </>\n    )\n}\n\nexport default Welcome\n","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js",["48","49"],"import React, { useState, useEffect } from 'react';\nimport Welcome from './Welcome';\nimport Dashboard from './Dashboard';\nimport ProtectedRoute from './ProtectedRoute';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Navigation from './Navigation';\nimport Login from './Login';\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            <Navigation />           \n            <Switch>\n                <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\n                <Route exact path=\"/\" component={Welcome} />\n                <Route exact path=\"/login\" component={Login} />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js",["50","51"],"/home/chase/Documents/dev/scheddit/client/src/Components/ProtectedRoute.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Login.js",[],"/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js",["52","53","54"],"import React, { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n    \n    const [userSavedPosts, setUSerSavedPosts] = useState([]);\n    const [nextPageQuery, setNextPageQuery] = useState(1);\n    const [dataLoading, setDataLoading] = useState(false);\n    const [isLastPage, setIsLastPage] = useState(false);\n\n    const getSavedQuery = () => {\n        setDataLoading(true);\n        fetch(`http://localhost:8081/dashboard/${nextPageQuery}`, {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Credentials\": true\n            }\n        })\n        .then(response => {\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to retrieve subreddits\");\n        })\n        .then(responseJson => {\n            //Subsequent queries are sent with a unique post identifier. Complimentary back-end logic can be found at ../../../server/routes/dashboard_routes.js line 55.\n            if (nextPageQuery !== 1) {\n                setUSerSavedPosts(prevItems => [...prevItems, ...responseJson]);\n            } else {\n                setUSerSavedPosts(responseJson);\n            }\n            setDataLoading(false);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n    }\n\n    useEffect(() => {\n         getSavedQuery();\n    }, []);\n\n    useEffect(() => {\n        if (userSavedPosts.length > 1) {\n            setNextPageQuery(userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname)        \n        }      \n    }, [userSavedPosts]);\n\n    return (\n        <main>\n            <h2>We found these saved images on your account:</h2>\n            <section>\n                {userSavedPosts ?  userSavedPosts.map(i => {\n                    return (\n                        <img key={i.postFullname} src={i.imgMed} alt={i.title}></img>  \n                        )\n                    }) : <p>No saved images found.</p>}\n                {userSavedPosts && !dataLoading ? <button onClick={getSavedQuery}>Load More</button> : <p>Loading...</p>}\n            </section>\n        </main>\n    )\n}\n\nexport default Dashboard;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":34,"column":8,"nodeType":"66","endLine":34,"endColumn":10,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"68","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"69","line":8,"column":12,"nodeType":"61","messageId":"62","endLine":8,"endColumn":22},{"ruleId":"59","severity":1,"message":"70","line":8,"column":24,"nodeType":"61","messageId":"62","endLine":8,"endColumn":37},{"ruleId":"64","severity":1,"message":"71","line":41,"column":8,"nodeType":"66","endLine":41,"endColumn":10,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAuthData', 'setLoadingState', and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["75"],"'Link' is defined but never used.","'isLastPage' is assigned a value but never used.","'setIsLastPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSavedQuery'. Either include it or remove the dependency array.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [setAuthData, setLoadingState, setUserData]",{"range":"81","text":"82"},"Update the dependencies array to be: [getSavedQuery]",{"range":"83","text":"84"},[1157,1159],"[setAuthData, setLoadingState, setUserData]",[1469,1471],"[getSavedQuery]"]