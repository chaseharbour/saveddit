[{"/home/chase/Documents/dev/scheddit/client/src/index.js":"1","/home/chase/Documents/dev/scheddit/client/src/App.js":"2","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js":"3","/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js":"4","/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js":"5","/home/chase/Documents/dev/scheddit/client/src/Components/Login.js":"6","/home/chase/Documents/dev/scheddit/client/src/Components/Modal.js":"7","/home/chase/Documents/dev/scheddit/client/src/Components/Loading.js":"8","/home/chase/Documents/dev/scheddit/client/src/Components/Home.js":"9","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js":"10","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js":"11"},{"size":524,"mtime":1616701413575,"results":"12","hashOfConfig":"13"},{"size":251,"mtime":1629844968590,"results":"14","hashOfConfig":"13"},{"size":698,"mtime":1615935991470,"results":"15","hashOfConfig":"16"},{"size":993,"mtime":1629844968594,"results":"17","hashOfConfig":"13"},{"size":757,"mtime":1616701413575,"results":"18","hashOfConfig":"13"},{"size":391,"mtime":1629844968594,"results":"19","hashOfConfig":"13"},{"size":557,"mtime":1629844968594,"results":"20","hashOfConfig":"13"},{"size":315,"mtime":1616701413575,"results":"21","hashOfConfig":"13"},{"size":1239,"mtime":1629844968594,"results":"22","hashOfConfig":"13"},{"size":3316,"mtime":1629844968590,"results":"23","hashOfConfig":"13"},{"size":770,"mtime":1629844968594,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bea6hq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4i1dfj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/chase/Documents/dev/scheddit/client/src/index.js",[],"/home/chase/Documents/dev/scheddit/client/src/App.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js",["51"],"import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { isAuth, setAuthData, setLoadingState } = useContext(AuthContext);\n\n  const handleLogoutClick = () => {\n    window.open(\n      \"https://aqueous-hollows-02149.herokuapp.com/auth/logout\",\n      \"_self\"\n    );\n    setAuthData(false);\n  };\n\n  const handleLoginClick = () => {\n    window.open(\n      \"https://aqueous-hollows-02149.herokuapp.com/auth/reddit\",\n      \"_self\"\n    );\n    setLoadingState(true);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-list\">\n        {/* <li className=\"home nav-btn navbar-list_item\">\n                    <Link to=\"/\">Home</Link>\n                </li> */}\n        {isAuth ? (\n          <>\n            <li\n              className=\"high-contrast-btn navbar-list_item\"\n              onClick={handleLogoutClick}\n            >\n              Logout\n            </li>\n          </>\n        ) : (\n          <li\n            className=\"high-contrast-btn navbar-list_item\"\n            onClick={handleLoginClick}\n          >\n            Login\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n",["52","53"],"/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Login.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Modal.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Loading.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Home.js",["54"],"import React, { useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Welcome from \"./Welcome\";\n\nconst Home = (props) => {\n  const {\n    isAuth,\n    userName,\n    setAuthData,\n    setLoadingState,\n    setUserData,\n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    fetch(\"https://aqueous-hollows-02149.herokuapp.com/auth/login/success\", {\n      mode: \"cors\",\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        setLoadingState(true);\n        if (response.status === 200) return response.json();\n        throw new Error(\"Failed to authenticate user\");\n      })\n      .then((responseJson) => {\n        setAuthData(true);\n        setLoadingState(false);\n        setUserData(responseJson.user);\n      })\n      .catch((error) => {\n        setAuthData(false);\n        setUserData(null);\n        setLoadingState(true);\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      {isAuth ? (\n        <>\n          <Dashboard />\n        </>\n      ) : (\n        <Welcome />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js",["55","56","57"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\nimport Modal from \"./Modal\";\nimport Loading from \"./Loading\";\n\nconst Dashboard = () => {\n  const [userSelectedImg, setUserSelectedImg] = useState(null);\n  const [modalActive, setModalActive] = useState(false);\n  const [userSavedPosts, setUSerSavedPosts] = useState([]);\n  const [nextPageQuery, setNextPageQuery] = useState(1);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [isLastPage, setIsLastPage] = useState(false);\n\n  const { userName } = useContext(AuthContext);\n\n  const imgClickEvent = (e) => {\n    const clickedImgObj = userSavedPosts.find(\n      (el) => el.title === e.target.alt\n    );\n    const clickedImgFullSizeSrc = clickedImgObj.imgFull;\n    const clickedImgAlt = clickedImgObj.title;\n\n    setUserSelectedImg({ src: clickedImgFullSizeSrc, alt: clickedImgAlt });\n    setModalActive(true);\n  };\n\n  const getSavedQuery = () => {\n    setDataLoading(true);\n    fetch(\n      `https://aqueous-hollows-02149.herokuapp.com/dashboard/${nextPageQuery}`,\n      {\n        mode: \"cors\",\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"Failed to retrieve subreddits\");\n      })\n      .then((responseJson) => {\n        //Subsequent queries are sent with a unique post identifier. Complimentary back-end logic can be found at ../../../server/routes/dashboard_routes.js line 55.\n        if (nextPageQuery !== 1) {\n          setUSerSavedPosts((prevItems) => [...prevItems, ...responseJson]);\n        } else {\n          setUSerSavedPosts(responseJson);\n        }\n        setDataLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getSavedQuery();\n  }, []);\n\n  useEffect(() => {\n    if (userSavedPosts.length > 1) {\n      setNextPageQuery(\n        userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname\n      );\n    }\n  }, [userSavedPosts]);\n\n  return (\n    <main className=\"dashboard-container\">\n      <aside className=\"dashboard-header\">\n        <h2 className=\"dashboard-header_text\">\n          Showing saved content for u/{userName}\n        </h2>\n      </aside>\n\n      <section className=\"image-container\">\n        {userSavedPosts ? (\n          userSavedPosts.map((i) => {\n            return (\n              <img\n                className=\"image-container_item img-med\"\n                onClick={imgClickEvent}\n                key={i.postFullname}\n                src={i.imgMed}\n                alt={i.title}\n              ></img>\n            );\n          })\n        ) : (\n          <p>No saved images found.</p>\n        )}\n      </section>\n      {userSavedPosts && !dataLoading ? (\n        <button className=\"btn\" onClick={getSavedQuery}>\n          <p>Load More</p>\n        </button>\n      ) : (\n        <Loading />\n      )}\n      {userSelectedImg && modalActive ? (\n        <Modal\n          currImageSrc={userSelectedImg.src}\n          currImageAlt={userSelectedImg.alt}\n          setModalActive={setModalActive}\n        />\n      ) : null}\n    </main>\n  );\n};\n\nexport default Dashboard;\n","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js",[],{"ruleId":"58","severity":1,"message":"59","line":5,"column":32,"nodeType":"60","messageId":"61","endLine":5,"endColumn":47},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":36,"column":6,"nodeType":"68","endLine":36,"endColumn":8,"suggestions":"69"},{"ruleId":"58","severity":1,"message":"70","line":12,"column":10,"nodeType":"60","messageId":"61","endLine":12,"endColumn":20},{"ruleId":"58","severity":1,"message":"71","line":12,"column":22,"nodeType":"60","messageId":"61","endLine":12,"endColumn":35},{"ruleId":"66","severity":1,"message":"72","line":57,"column":6,"nodeType":"68","endLine":57,"endColumn":8,"suggestions":"73"},"no-unused-vars","'setLoadingState' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAuthData', 'setLoadingState', and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["76"],"'isLastPage' is assigned a value but never used.","'setIsLastPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSavedQuery'. Either include it or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [setAuthData, setLoadingState, setUserData]",{"range":"82","text":"83"},"Update the dependencies array to be: [getSavedQuery]",{"range":"84","text":"85"},[1071,1073],"[setAuthData, setLoadingState, setUserData]",[1915,1917],"[getSavedQuery]"]