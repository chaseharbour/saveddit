[{"/home/chase/Documents/dev/scheddit/client/src/index.js":"1","/home/chase/Documents/dev/scheddit/client/src/App.js":"2","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js":"3","/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js":"4","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js":"5","/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js":"6","/home/chase/Documents/dev/scheddit/client/src/Components/Home.js":"7","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js":"8","/home/chase/Documents/dev/scheddit/client/src/Components/Login.js":"9","/home/chase/Documents/dev/scheddit/client/src/Components/Modal.js":"10","/home/chase/Documents/dev/scheddit/client/src/Components/Loading.js":"11"},{"size":524,"mtime":1616116275323,"results":"12","hashOfConfig":"13"},{"size":276,"mtime":1616116275315,"results":"14","hashOfConfig":"13"},{"size":698,"mtime":1615935991470,"results":"15","hashOfConfig":"16"},{"size":1139,"mtime":1616116275323,"results":"17","hashOfConfig":"13"},{"size":660,"mtime":1616116275323,"results":"18","hashOfConfig":"13"},{"size":757,"mtime":1616116275323,"results":"19","hashOfConfig":"13"},{"size":1269,"mtime":1616116275319,"results":"20","hashOfConfig":"13"},{"size":3325,"mtime":1616116275315,"results":"21","hashOfConfig":"13"},{"size":499,"mtime":1616116275319,"results":"22","hashOfConfig":"13"},{"size":571,"mtime":1616116275319,"results":"23","hashOfConfig":"13"},{"size":315,"mtime":1616116275319,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"16yh5xm",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4i1dfj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/home/chase/Documents/dev/scheddit/client/src/index.js",[],["53","54"],"/home/chase/Documents/dev/scheddit/client/src/App.js",["55","56"],"import React, { useState, useEffect } from \"react\";\nimport Home from \"./Components/Home\";\nimport Navigation from \"./Components/Navigation\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Navigation />\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js",["57"],"import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { isAuth, setAuthData, setLoadingState } = useContext(AuthContext);\n\n  const handleLogoutClick = () => {\n    window.open(\"http://localhost:8081/auth/logout\", \"_self\");\n    setAuthData(false);\n  };\n\n  const handleLoginClick = () => {\n    window.open(\"http://localhost:8081/auth/reddit\", \"_self\");\n    setLoadingState(true);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-list\">\n        {/* <li className=\"home nav-btn navbar-list_item\">\n                    <Link to=\"/\">Home</Link>\n                </li> */}\n        {isAuth ? (\n          <>\n            <li\n              className=\"high-contrast-btn navbar-list_item\"\n              onClick={handleLogoutClick}\n            >\n              Logout\n            </li>\n          </>\n        ) : (\n          <li\n            className=\"high-contrast-btn navbar-list_item\"\n            onClick={handleLoginClick}\n          >\n            Login\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js",[],"/home/chase/Documents/dev/scheddit/client/src/Contexts/AuthContext.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Home.js",["58","59"],"import React, { useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Welcome from \"./Welcome\";\n\nconst Home = (props) => {\n  const {\n    isAuth,\n    userName,\n    setAuthData,\n    setLoadingState,\n    setUserData,\n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8081/auth/login/success\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true,\n      },\n    })\n      .then((response) => {\n        setLoadingState(true);\n        if (response.status === 200) return response.json();\n        throw new Error(\"Failed to authenticate user\");\n      })\n      .then((responseJson) => {\n        setAuthData(true);\n        setLoadingState(false);\n        setUserData(responseJson.user);\n      })\n      .catch((error) => {\n        setAuthData(false);\n        setUserData(null);\n        setLoadingState(true);\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      {isAuth ? (\n        <>\n          <Dashboard />\n        </>\n      ) : (\n        <Welcome />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","/home/chase/Documents/dev/scheddit/client/src/Components/Dashboard.js",["60","61","62"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\nimport Modal from \"./Modal\";\nimport Loading from \"./Loading\";\n\nconst Dashboard = () => {\n  const [userSelectedImg, setUserSelectedImg] = useState(null);\n  const [modalActive, setModalActive] = useState(false);\n  const [userSavedPosts, setUSerSavedPosts] = useState([]);\n  const [nextPageQuery, setNextPageQuery] = useState(1);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [isLastPage, setIsLastPage] = useState(false);\n\n  const { userName } = useContext(AuthContext);\n\n  const imgClickEvent = (e) => {\n    const clickedImgObj = userSavedPosts.find(\n      (el) => el.title === e.target.alt\n    );\n    const clickedImgFullSizeSrc = clickedImgObj.imgFull;\n    const clickedImgAlt = clickedImgObj.title;\n\n    setUserSelectedImg({ src: clickedImgFullSizeSrc, alt: clickedImgAlt });\n    setModalActive(true);\n  };\n\n  const getSavedQuery = () => {\n    setDataLoading(true);\n    fetch(`http://localhost:8081/dashboard/${nextPageQuery}`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"Failed to retrieve subreddits\");\n      })\n      .then((responseJson) => {\n        //Subsequent queries are sent with a unique post identifier. Complimentary back-end logic can be found at ../../../server/routes/dashboard_routes.js line 55.\n        if (nextPageQuery !== 1) {\n          setUSerSavedPosts((prevItems) => [...prevItems, ...responseJson]);\n        } else {\n          setUSerSavedPosts(responseJson);\n        }\n        setDataLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getSavedQuery();\n  }, []);\n\n  useEffect(() => {\n    if (userSavedPosts.length > 1) {\n      setNextPageQuery(\n        userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname\n      );\n    }\n  }, [userSavedPosts]);\n\n  return (\n    <main className=\"dashboard-container\">\n      <aside className=\"dashboard-header\">\n        <h2 className=\"dashboard-header_text\">\n          Showing saved content for u/{userName}\n        </h2>\n      </aside>\n\n      <section className=\"image-container\">\n        {userSavedPosts ? (\n          userSavedPosts.map((i) => {\n            return (\n              <img\n                className=\"image-container_item img-med\"\n                onClick={imgClickEvent}\n                key={i.postFullname}\n                src={i.imgMed}\n                alt={i.title}\n              ></img>\n            );\n          })\n        ) : (\n          <p>No saved images found.</p>\n        )}\n      </section>\n      {userSavedPosts && !dataLoading ? (\n        <button className=\"btn\" onClick={getSavedQuery}>\n          <p>Load More</p>\n        </button>\n      ) : (\n        <Loading />\n      )}\n      {userSelectedImg && modalActive ? (\n        <Modal\n          currImageSrc={userSelectedImg.src}\n          currImageAlt={userSelectedImg.alt}\n          setModalActive={setModalActive}\n        />\n      ) : null}\n    </main>\n  );\n};\n\nexport default Dashboard;\n","/home/chase/Documents/dev/scheddit/client/src/Components/Login.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Modal.js",["63"],"import React, { useState } from \"react\";\nimport { ReactComponent as Close } from \"../icons/close.svg\";\n\nconst Modal = (props) => {\n  const { currImageSrc, currImageAlt, setModalActive } = props;\n\n  const deactivateModal = () => {\n    setModalActive(false);\n  };\n  return (\n    <div className=\"modal-background\">\n      <div className=\"image-modal\">\n        <img src={currImageSrc} alt={currImageAlt} />\n      </div>\n      <button className=\"image-modal_close exit-btn\" onClick={deactivateModal}>\n        <Close />\n      </button>\n    </div>\n  );\n};\n\nexport default Modal;\n","/home/chase/Documents/dev/scheddit/client/src/Components/Loading.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":9,"column":5,"nodeType":"70","messageId":"71","endLine":9,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":41,"column":6,"nodeType":"76","endLine":41,"endColumn":8,"suggestions":"77"},{"ruleId":"68","severity":1,"message":"78","line":12,"column":10,"nodeType":"70","messageId":"71","endLine":12,"endColumn":20},{"ruleId":"68","severity":1,"message":"79","line":12,"column":22,"nodeType":"70","messageId":"71","endLine":12,"endColumn":35},{"ruleId":"74","severity":1,"message":"80","line":58,"column":6,"nodeType":"76","endLine":58,"endColumn":8,"suggestions":"81"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'userName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAuthData', 'setLoadingState', and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["84"],"'isLastPage' is assigned a value but never used.","'setIsLastPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSavedQuery'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [setAuthData, setLoadingState, setUserData]",{"range":"90","text":"91"},"Update the dependencies array to be: [getSavedQuery]",{"range":"92","text":"93"},[1101,1103],"[setAuthData, setLoadingState, setUserData]",[1978,1980],"[getSavedQuery]"]