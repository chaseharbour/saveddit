[{"/home/chase/Documents/dev/scheddit/client/src/index.js":"1","/home/chase/Documents/dev/scheddit/client/src/App.js":"2","/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js":"3","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js":"4","/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js":"5","/home/chase/Documents/dev/scheddit/client/src/Components/Post.js":"6","/home/chase/Documents/dev/scheddit/client/src/Components/Dashbaord.js":"7"},{"size":410,"mtime":1610497031289,"results":"8","hashOfConfig":"9"},{"size":156,"mtime":1610576126109,"results":"10","hashOfConfig":"9"},{"size":1716,"mtime":1613165373647,"results":"11","hashOfConfig":"9"},{"size":444,"mtime":1613169058363,"results":"12","hashOfConfig":"9"},{"size":946,"mtime":1614547148816,"results":"13","hashOfConfig":"9"},{"size":646,"mtime":1613166223850,"results":"14","hashOfConfig":"9"},{"size":1446,"mtime":1614551238278,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4i1dfj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/chase/Documents/dev/scheddit/client/src/index.js",[],["34","35"],"/home/chase/Documents/dev/scheddit/client/src/App.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Welcome.js",["36"],"import React, { useState, useEffect } from 'react'\nimport Navigation from './Navigation';\nimport Post from './Post';\n\n//TODO: Create routing \n//Fetch data from backend\n\nconst Welcome = (props) => {\n    const [user, setUser] = useState([]);\n    const [authError, setAuthError] = useState(null);\n    const [authenticated, setAuthenticated] = useState(false);\n\n     useEffect(() => {\n         \n         fetch(\"http://localhost:8081/auth/login/success\", {\n             method: \"GET\",\n             credentials: \"include\",\n             headers: {\n                 Accept: \"application/json\",\n                 \"Content-type\": \"application/json\",\n                 \"Access-Control-Allow-Credentials\": true\n             }\n         }).then(response => {\n             console.log(response);\n             if (response.status === 200) return response.json();\n             throw new Error(\"Failed to authenticate user\");\n         })\n         .then(responseJson => {\n             setAuthenticated(true);\n             setUser(responseJson.user);\n         })\n         .catch(error => {\n             setAuthenticated(false);\n             setAuthError('Failed to authenticate user');\n             console.error(error);\n         })\n     }, [])\n\n\n    return (\n        <div>\n            <Navigation \n                authenticated={authenticated}\n                setAuthenticated={setAuthenticated}\n            />\n            {!authenticated ? (\n                <h1>Welcome!</h1>\n            ) : (\n                <div>\n                    <h1>You have logged in successfully!</h1>\n                    <h2>Welcome {user}</h2>\n                    <Post />\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Welcome\n","/home/chase/Documents/dev/scheddit/client/src/Components/AppRouter.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Navigation.js",[],"/home/chase/Documents/dev/scheddit/client/src/Components/Post.js",[],["37","38"],"/home/chase/Documents/dev/scheddit/client/src/Components/Dashbaord.js",["39","40"],"import React, { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n\n    const [userSubreddits, setUserSubreddits] = useState([]);\n\n    useEffect(() => {\n         \n        fetch(\"http://localhost:8081/dashboard\", {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Credentials\": true\n            }\n        })\n        .then(response => {\n            console.log(response);\n            if (response.status === 200) return response.json();\n            throw new Error(\"Failed to retrieve subreddits\");\n        })\n        .then(responseJson => {\n            console.log(responseJson);\n            setUserSubreddits(responseJson);\n            console.log(userSubreddits);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n    }, [])\n\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            {userSubreddits ?  userSubreddits.map(i => {\n                return (\n                    <ul>\n                        <li key={i.postFullname}>\n                            <img src={i.imgMed}></img>\n                        </li>\n                    </ul>\n                )\n            }) : <p>No subreddits found.</p>}\n            {userSubreddits ? <button>Load More</button> : null}\n        </div>\n    )\n}\n\nexport default Dashboard;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":10,"column":12,"nodeType":"47","messageId":"48","endLine":10,"endColumn":21},{"ruleId":"41","replacedBy":"49"},{"ruleId":"43","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":31,"column":8,"nodeType":"53","endLine":31,"endColumn":10,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":40,"column":29,"nodeType":"57","endLine":40,"endColumn":49},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'authError' is assigned a value but never used.","Identifier","unusedVar",["58"],["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userSubreddits'. Either include it or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [userSubreddits]",{"range":"63","text":"64"},[937,939],"[userSubreddits]"]