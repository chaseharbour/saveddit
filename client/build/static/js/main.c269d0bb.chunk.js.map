{"version":3,"sources":["Contexts/AuthContext.js","Components/Image.js","Components/ImageModal.js","Components/Loading.js","Components/Video.js","Components/VideoModal.js","Components/Iframe.js","Components/IframeModal.js","Components/Media.js","Components/Dashboard.js","Components/Login.js","Components/Welcome.js","Components/Home.js","Components/Navigation.js","App.js","index.js"],"names":["AuthContext","createContext","AuthProvider","children","useState","isAuth","setIsAuth","userName","setUserName","isLoading","setIsLoading","Provider","value","setAuthData","bool","setLoadingState","setUserData","data","Image","imgClickEvent","postFullname","imgSrc","imgAlt","className","onClick","src","alt","ImageModal","currImageSrc","currImageAlt","setModalActive","currImageKey","Loading","Video","videoSrc","cross-origin","muted","autoplay","controls","type","IframeModal","unchangedSrc","currAlt","currKey","setVideoSrc","useEffect","parsedVideoSrc","slice","concat","handleChangeVideoFileType","Iframe","console","log","width","height","frameborder","scrolling","allowFullScreen","embedHTML","iframeSrc","setIframeSrc","parsedHTML","split","filter","e","includes","toString","getSrcFromHTML","Media","modal","userSavedPosts","dataLoading","getSavedQuery","userSelectedImg","modalActive","postHint","title","mediaEmbed","mediaDomain","VideoModal","map","i","postFullName","imgMed","Dashboard","setUserSelectedImg","setUSerSavedPosts","nextPageQuery","setNextPageQuery","setDataLoading","useContext","process","fetch","mode","method","credentials","headers","then","response","status","json","Error","responseJson","prevItems","catch","error","length","clickedImgObj","find","el","target","clickedImgFullSizeSrc","imgFull","clickedImgAlt","clickedMediaPostHint","domain","Login","url","Fragment","href","Welcome","props","envUrl","Home","user","Navigation","window","open","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c269d0bb.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const AuthContext = createContext({});\n\nconst AuthProvider = ({ children }) => {\n  const [isAuth, setIsAuth] = useState(false);\n  const [userName, setUserName] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const setAuthData = (bool) => {\n    setIsAuth(bool);\n  };\n\n  const setLoadingState = (bool) => {\n    setIsLoading(bool);\n  };\n\n  const setUserData = (data) => {\n    setUserName(data);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuth,\n        userName,\n        isLoading,\n        setAuthData,\n        setLoadingState,\n        setUserData,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React from \"react\";\n\nconst Image = ({ imgClickEvent, postFullname, imgSrc, imgAlt }) => {\n  return (\n    <>\n      <img\n        className=\"image-container_item img-med\"\n        onClick={imgClickEvent}\n        key={postFullname}\n        src={imgSrc}\n        alt={imgAlt}\n      ></img>\n    </>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport Image from \"./Image\";\n\nconst ImageModal = ({\n  currImageSrc,\n  currImageAlt,\n  currImageKey,\n  setModalActive,\n}) => {\n  const deactivateModal = () => {\n    setModalActive(false);\n  };\n  return (\n    <div className=\"modal-background\" onClick={deactivateModal}>\n      <div className=\"image-modal\">\n        <Image imgSrc={currImageSrc} imgAlt={currImageAlt} />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageModal;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <span className=\"loading loading-anim_1\">.</span>\n      <span className=\"loading loading-anim_2\">.</span>\n      <span className=\"loading loading-anim_3\">.</span>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nconst Video = ({ videoSrc }) => {\n  return (\n    <video\n      className=\"video\"\n      cross-origin=\"anonymous\"\n      muted\n      autoplay=\"true\"\n      controls\n    >\n      <source src={videoSrc} type=\"video/mp4\"></source>\n    </video>\n  );\n};\n\nexport default Video;\n","import React, { useState, useEffect } from \"react\";\nimport Video from \"./Video\";\n\nconst IframeModal = ({ unchangedSrc, currAlt, currKey, setModalActive }) => {\n  const [videoSrc, setVideoSrc] = useState(\"\");\n\n  const deactivateModal = () => {\n    setModalActive(false);\n  };\n\n  //Imgur videos are served in .gifv format but can be changed to .mp4 to serve in a <video> element.\n  const handleChangeVideoFileType = () => {\n    const parsedVideoSrc = unchangedSrc.slice(0, -4).concat(\"\", \"mp4\");\n    setVideoSrc(parsedVideoSrc);\n  };\n\n  useEffect(() => {\n    handleChangeVideoFileType();\n  }, []);\n\n  return (\n    <>\n      <div className=\"modal-background\" onClick={deactivateModal}>\n        <div className=\"image-modal\">\n          <Video videoSrc={videoSrc} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IframeModal;\n","import React from \"react\";\n\nconst Iframe = ({ src }) => {\n  console.log(src);\n  return (\n    <iframe\n      width=\"100%\"\n      height=\"100%\"\n      frameborder=\"0\"\n      className=\"iframe\"\n      src={src}\n      scrolling=\"no\"\n      allowFullScreen\n    />\n  );\n};\n\nexport default Iframe;\n","import React, { useState, useEffect } from \"react\";\nimport Iframe from \"./Iframe\";\n\nconst IframeModal = ({ embedHTML, currAlt, currKey, setModalActive }) => {\n  const [iframeSrc, setIframeSrc] = useState(\"\");\n  const deactivateModal = () => {\n    setModalActive(false);\n  };\n\n  const getSrcFromHTML = () => {\n    const parsedHTML = embedHTML\n      .split(\" \")\n      .filter((e) => e.includes(\"src\"))\n      .toString()\n      .slice(4)\n      .slice(1, -1);\n    setIframeSrc(parsedHTML);\n  };\n\n  useEffect(() => {\n    getSrcFromHTML();\n  }, []);\n\n  return (\n    <>\n      <div className=\"modal-background\" onClick={deactivateModal}>\n        <div className=\"image-modal\">\n          <Iframe src={iframeSrc} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IframeModal;\n","import React from \"react\";\nimport ImageModal from \"./ImageModal\";\nimport Loading from \"./Loading\";\nimport Image from \"./Image\";\nimport VideoModal from \"./VideoModal\";\nimport IframeModal from \"./IframeModal\";\n\nconst Media = ({\n  userName,\n  userSavedPosts,\n  dataLoading,\n  getSavedQuery,\n  userSelectedImg,\n  modalActive,\n  setModalActive,\n  imgClickEvent,\n}) => {\n  let modal;\n  console.log(userSelectedImg);\n\n  if (userSelectedImg && modalActive && userSelectedImg.postHint === \"image\") {\n    modal = (\n      <ImageModal\n        currImageSrc={userSelectedImg.src}\n        currImageAlt={userSelectedImg.alt}\n        currImageKey={userSelectedImg.title}\n        setModalActive={setModalActive}\n      />\n    );\n  } else if (\n    userSelectedImg &&\n    modalActive &&\n    userSelectedImg.postHint === \"rich:video\"\n  ) {\n    modal = (\n      <IframeModal\n        embedHTML={userSelectedImg.mediaEmbed}\n        setModalActive={setModalActive}\n      />\n    );\n  } else if (\n    userSelectedImg &&\n    modalActive &&\n    userSelectedImg.postHint === \"link\" &&\n    userSelectedImg.mediaDomain === \"i.imgur.com\"\n  ) {\n    modal = (\n      <VideoModal\n        unchangedSrc={userSelectedImg.src}\n        setModalActive={setModalActive}\n      />\n    );\n  } else {\n    modal = null;\n  }\n\n  return (\n    <main className=\"dashboard-container\">\n      <aside className=\"dashboard-header\">\n        <h1 className=\"dashboard-header_text\">\n          Showing saved content for{\" \"}\n          <span className=\"contrast-text\">u/{userName}</span>\n        </h1>\n      </aside>\n\n      <section className=\"image-container\">\n        {userSavedPosts ? (\n          userSavedPosts.map((i) => {\n            return (\n              <Image\n                imgClickEvent={imgClickEvent}\n                postFullname={i.postFullName}\n                imgSrc={i.imgMed}\n                imgAlt={i.title}\n              />\n            );\n          })\n        ) : (\n          <p>No saved images found.</p>\n        )}\n      </section>\n      {userSavedPosts && !dataLoading ? (\n        <button className=\"btn\" onClick={getSavedQuery}>\n          <p>Load More</p>\n        </button>\n      ) : (\n        <Loading />\n      )}\n      {modal}\n    </main>\n  );\n};\n\nexport default Media;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\nimport Media from \"./Media\";\n\nconst Dashboard = () => {\n  const [userSelectedImg, setUserSelectedImg] = useState(null);\n  const [modalActive, setModalActive] = useState(false);\n  const [userSavedPosts, setUSerSavedPosts] = useState([]);\n  const [nextPageQuery, setNextPageQuery] = useState(1);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [isLastPage, setIsLastPage] = useState(false);\n\n  const { userName } = useContext(AuthContext);\n\n  const imgClickEvent = (e) => {\n    const clickedImgObj = userSavedPosts.find(\n      (el) => el.title === e.target.alt\n    );\n    const clickedImgFullSizeSrc = clickedImgObj.imgFull;\n    const clickedImgAlt = clickedImgObj.title;\n    const clickedMediaPostHint = clickedImgObj.postHint;\n    const mediaEmbed = clickedImgObj.mediaEmbed;\n    const mediaDomain = clickedImgObj.domain;\n\n    setUserSelectedImg({\n      src: clickedImgFullSizeSrc,\n      alt: clickedImgAlt,\n      postHint: clickedMediaPostHint,\n      mediaEmbed,\n      mediaDomain,\n    });\n    setModalActive(true);\n  };\n\n  const getSavedQuery = () => {\n    setDataLoading(true);\n    console.log(`${process.env.REACT_APP_DASHBOARD}`);\n    fetch(`${process.env.REACT_APP_DASHBOARD}/${nextPageQuery}`, {\n      mode: \"cors\",\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"Failed to retrieve subreddits\");\n      })\n      .then((responseJson) => {\n        //Subsequent queries are sent with a unique post identifier. Complimentary back-end logic can be found at ../../../server/routes/dashboard_routes.js line 55.\n        if (nextPageQuery !== 1) {\n          setUSerSavedPosts((prevItems) => [...prevItems, ...responseJson]);\n        } else {\n          setUSerSavedPosts(responseJson);\n        }\n        setDataLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getSavedQuery();\n  }, []);\n\n  useEffect(() => {\n    if (userSavedPosts.length > 1) {\n      setNextPageQuery(\n        userSavedPosts.slice(userSavedPosts.length - 1)[0].postFullname\n      );\n    }\n  }, [userSavedPosts]);\n\n  return (\n    <>\n      <Media\n        userName={userName}\n        userSavedPosts={userSavedPosts}\n        dataLoading={dataLoading}\n        getSavedQuery={getSavedQuery}\n        userSelectedImg={userSelectedImg}\n        modalActive={modalActive}\n        setModalActive={setModalActive}\n        imgClickEvent={imgClickEvent}\n      />\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\n\nconst Login = ({ url }) => {\n  return (\n    <React.Fragment>\n      <section className=\"login\">\n        <a\n          className=\"high-contrast-btn login-link\"\n          href={url}\n          // href=\"https://aqueous-hollows-02149.herokuapp.com/auth/reddit\"\n        >\n          Login\n        </a>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"./Login\";\n\n//TODO: Create routing\n//Fetch data from backend\n\nconst Welcome = (props) => {\n  const envUrl = process.env.REACT_APP_LOGIN;\n  console.log(envUrl);\n  return (\n    <React.Fragment>\n      <section className=\"welcome\">\n        <h1 className=\"welcome-header_text\">All of your saved images</h1>\n        <h2 className=\"welcome-subhead\">in one convenient place</h2>\n        <p className=\"welcome-description_text\">\n          Log in through Reddit and we’ll take care of the rest. You will be\n          able to scroll through all images saved to your Reddit account to your\n          heart’s content.\n        </p>\n        <Login url={envUrl} />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\nimport Dashboard from \"./Dashboard\";\nimport Welcome from \"./Welcome\";\n\nconst Home = (props) => {\n  const { isAuth, setAuthData, setLoadingState, setUserData } =\n    useContext(AuthContext);\n\n  useEffect(() => {\n    // fetch(\"https://aqueous-hollows-02149.herokuapp.com/auth/login/success\", {\n    fetch(process.env.REACT_APP_AUTH, {\n      mode: \"cors\",\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        setLoadingState(true);\n        if (response.status === 200) return response.json();\n        throw new Error(\"Failed to authenticate user\");\n      })\n      .then((responseJson) => {\n        setAuthData(true);\n        setLoadingState(false);\n        setUserData(responseJson.user);\n      })\n      .catch((error) => {\n        setAuthData(false);\n        setUserData(null);\n        setLoadingState(true);\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      {isAuth ? (\n        <>\n          <Dashboard />\n        </>\n      ) : (\n        <Welcome />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../Contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { isAuth, setAuthData, setLoadingState } = useContext(AuthContext);\n\n  const handleLogoutClick = () => {\n    window.open(\n      \"https://aqueous-hollows-02149.herokuapp.com/auth/logout\",\n      \"_self\"\n    );\n    setAuthData(false);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-list\">\n        {/* <li className=\"home nav-btn navbar-list_item\">\n                    <Link to=\"/\">Home</Link>\n                </li> */}\n        {isAuth ? (\n          <>\n            <h1 className=\"navbar-title\">Saveddit</h1>\n            <li\n              className=\"high-contrast-btn-sm navbar-list_item\"\n              onClick={handleLogoutClick}\n            >\n              Sign out\n            </li>\n          </>\n        ) : (\n          <h1 className=\"navbar-title\">Saveddit</h1>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Home from \"./Components/Home\";\nimport Navigation from \"./Components/Navigation\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Navigation />\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport AuthProvider from \"./Contexts/AuthContext\";\nimport \"./main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}